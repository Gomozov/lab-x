<script type="text/javascript" charset="utf-8">
  function CGauge(canvasx) {
    this.canvas = canvasx;
    this.ctx = this.canvas.getContext("2d");
    this.W = this.canvas.width;
    this.H = this.canvas.height;
    this.degrees = 0;
    this.new_degrees = 0;
    this.difference = 0;
    this.color = "darkturquoise";                         
    this.bgcolor = "#FFF";
    this.text = "";
    this.animation_loop = 0;
  
this.init = function () {
      this.ctx.clearRect(0, 0, W, H);
      this.ctx.beginPath();
      this.ctx.strokeStyle = this.bgcolor;
      this.ctx.lineWidth = 12;
      this.ctx.arc(this.W/2, this.H/2, 38, 0, Math.PI*2, false); 
      this.ctx.stroke();
                                       
      radians = degrees * Math.PI / 180;
      this.ctx.beginPath();
      this.ctx.strokeStyle = this.color;
      this.ctx.lineWidth = 12;
      this.ctx.arc(this.W/2, this.H/2, 38, 0 - 90*Math.PI/180, radians - 90*Math.PI/180, false); 
      this.ctx.stroke();
                                                                 
      this.ctx.fillStyle = this.color;
      this.ctx.font = "28px bebas";
      this.text = Math.floor(this.degrees/360*100)+"C";
      text_width = this.ctx.measureText(this.text).width;
      this.ctx.fillText(this.text, this.W/2 - text_width/2, this.H/2 + 10);
                    }
this.draw = function () {
      if(typeof this.animation_loop != undefined) clearInterval(this.animation_loop);
      this.new_degrees = Math.round(Math.random()*360);
      this.difference = this.new_degrees - this.degrees;
      this.animation_loop = setInterval(this.animate_to, 1000/this.difference);
                     }
this.animate_to = function () {
  if(this.degrees == this.new_degrees) clearInterval(this.animation_loop);
  if(this.degrees < this.new_degrees)
    this.degrees++;
       else
         this.degrees--;
      this.init;
                          }
  }

window.onload = function(){

    var canvas1 = document.getElementById("canvas1");     //
    var gauge = new CGauge(canvas1);
    gauge.draw();
    var canvas = document.getElementById("canvas");     //
    var ctx = canvas.getContext("2d");
    var W = canvas.width;
    var H = canvas.height;
    var degrees = 0;
    var new_degrees = 0;
    var difference = 0;
    var color = "darkturquoise";                         //
    var bgcolor = "#FFF";
    var text;
    var animation_loop, redraw_loop;

    function init() {
      ctx.clearRect(0, 0, W, H);
      ctx.beginPath();
      ctx.strokeStyle = bgcolor;
      ctx.lineWidth = 12;
      ctx.arc(W/2, H/2, 38, 0, Math.PI*2, false); 
      ctx.stroke();
                                       
      var radians = degrees * Math.PI / 180;
      ctx.beginPath();
      ctx.strokeStyle = color;
      ctx.lineWidth = 12;
      ctx.arc(W/2, H/2, 38, 0 - 90*Math.PI/180, radians - 90*Math.PI/180, false); 
      ctx.stroke();
                                                                 
      ctx.fillStyle = color;
      ctx.font = "28px bebas";
      text = Math.floor(degrees/360*100)+"C";
      text_width = ctx.measureText(text).width;
      ctx.fillText(text, W/2 - text_width/2, H/2 + 10);
                    }
    function draw() {
      if(typeof animation_loop != undefined) clearInterval(animation_loop);
      new_degrees = Math.round(Math.random()*360);
      difference = new_degrees - degrees;
      animation_loop = setInterval(animate_to, 1000/difference);
                     }
    function animate_to() {
       if(degrees == new_degrees) clearInterval(animation_loop);
       if(degrees < new_degrees)
         degrees++;
       else
         degrees--;
       init();
                          }
     draw();
     redraw_loop = setInterval(draw, 5000); 
  }
</script>
<div class="row">
  <div class="span6">
<h2>List of users</h2>
<table class="table table-striped">
  <thead>
    <tr>
      <th style="width: 30px"><i class= "icon-list-alt"></i></th>
      <th style="width: 65px"><i class= "icon-picture"></i> Avatar</th>
      <th><i class= "icon-user"></i> Username</th>
      <th><i class= "icon-envelope"></i> Email adress</th>
      <% if current_user.admin? %>
        <th><i class= "icon-trash"></i> Delete user</th>
      <% end %>
    </tr>
  </thead>
  <tbody>  
  <% @users.each do |user| %>
    <tr>
       <th><%= user.id %></th>
       <th><% if user.avatar? %>
             <%= image_tag user.avatar_url(:thumb).to_s, :class => "img-circle" %>
           <% else %>
             <%= image_tag('default 24.png', :class => "img-circle") %>
           <% end %></th>
       <th><%= link_to user.name, user %></th>
       <th><%= user.email %></th>
       <% if current_user.admin? && user !=current_user %>
         <th><%= link_to "delete", user, :method => :delete, :confirm => "You sure?",
                                         :title => "Delete #{user.name}" %></th>
       <% end %>
    </tr>
  <% end %>
  <%= will_paginate @users, :param_name => 'user_page', :renderer => BootstrapPagination::Rails%>
  </tbody>
</table>
</div>
  <div class="span6">
    <canvas id="canvas" width="110" height="110">
    <canvas id="canvas1" width="110" height="110">
  </div>
</div>
